# serializer version: 1
# name: test_schema_trav_book_parser_glossary_cli[TravBookParserGlossary-True]
  '''
  {
    "$defs": {
      "BookDescription": {
        "description": "Description of a book and the content within.",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "code_name": {
            "title": "Code Name",
            "type": "string"
          },
          "collection_descriptions": {
            "items": {
              "$ref": "#/$defs/CollectionDescription"
            },
            "title": "Collection Descriptions",
            "type": "array"
          }
        },
        "required": [
          "name",
          "code_name",
          "collection_descriptions"
        ],
        "title": "BookDescription",
        "type": "object"
      },
      "CollectionDescription": {
        "description": "Description of a collection of objects.",
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Name"
          },
          "name_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Page number where the collection name is found (defaults to data source page, if available).",
            "title": "Name Page"
          },
          "name_nth_largest_font": {
            "default": 1,
            "description": "Text with the Nth largest font is used as the collection name.",
            "title": "Name Nth Largest Font",
            "type": "integer"
          },
          "type": {
            "$ref": "#/$defs/TravObjectType"
          },
          "default_values": {
            "description": "Default values for trav_obj fields (for e.g. item_type). Note: These are not validated.",
            "title": "Default Values",
            "type": "object"
          },
          "instrument": {
            "$ref": "#/$defs/Instrument",
            "description": "Instrument objects with additional data."
          },
          "check_amount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Check Amount"
          },
          "disabled": {
            "default": false,
            "title": "Disabled",
            "type": "boolean"
          },
          "data_source_description": {
            "description": "Description of a source of data (e.g. a table).",
            "discriminator": {
              "mapping": {
                "html-table": "#/$defs/HTMLTableDataSourceDescription",
                "pdfplumber-table": "#/$defs/PDFPlumberDataSourceDescription",
                "tabula-table": "#/$defs/TabulaDataSourceDescription"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/HTMLTableDataSourceDescription"
              },
              {
                "$ref": "#/$defs/TabulaDataSourceDescription"
              },
              {
                "$ref": "#/$defs/PDFPlumberDataSourceDescription"
              }
            ],
            "title": "Data Source Description"
          }
        },
        "required": [
          "type",
          "data_source_description"
        ],
        "title": "CollectionDescription",
        "type": "object"
      },
      "DataSourceDescriptionRoot": {
        "description": "Description of a source of data (e.g. a table).",
        "discriminator": {
          "mapping": {
            "html-table": "#/$defs/HTMLTableDataSourceDescription",
            "pdfplumber-table": "#/$defs/PDFPlumberDataSourceDescription",
            "tabula-table": "#/$defs/TabulaDataSourceDescription"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/$defs/HTMLTableDataSourceDescription"
          },
          {
            "$ref": "#/$defs/TabulaDataSourceDescription"
          },
          {
            "$ref": "#/$defs/PDFPlumberDataSourceDescription"
          }
        ],
        "title": "Data Source Description"
      },
      "HTMLTableDataSourceDescription": {
        "description": "Description of getting data from exported HTML table.",
        "properties": {
          "type": {
            "const": "html-table",
            "title": "Type",
            "type": "string"
          },
          "pages": {
            "title": "Pages",
            "type": "string"
          }
        },
        "required": [
          "type",
          "pages"
        ],
        "title": "HTMLTableDataSourceDescription",
        "type": "object"
      },
      "Instrument": {
        "description": "Instrumentation settings for objects.",
        "properties": {
          "add_images": {
            "default": false,
            "description": "Add images for the objects in the collection. Images are found by looking for the objects name in `image_pages` pages. The closest image is used.",
            "title": "Add Images",
            "type": "boolean"
          },
          "image_pages": {
            "description": "Pages in the book to search for images.",
            "items": {
              "type": "integer"
            },
            "title": "Image Pages",
            "type": "array"
          }
        },
        "title": "Instrument",
        "type": "object"
      },
      "PDFPlumberDataSourceDescription": {
        "description": "Description of getting data using pdfplumber.",
        "properties": {
          "type": {
            "const": "pdfplumber-table",
            "title": "Type",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "page_table_number": {
            "default": 1,
            "description": "The sequential number of the table on the page.",
            "title": "Page Table Number",
            "type": "integer"
          },
          "table_settings": {
            "anyOf": [
              {
                "$ref": "#/$defs/TableSettingsDict"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Settings for table extraction, used by pdfplumber.See https://github.com/jsvine/pdfplumber/blob/stable/README.md#table-extraction-settings"
          }
        },
        "required": [
          "type",
          "page"
        ],
        "title": "PDFPlumberDataSourceDescription",
        "type": "object"
      },
      "TableSettingsDict": {
        "description": "Settings for table extraction, used by pdfplumber.\n\nSee https://github.com/jsvine/pdfplumber/blob/stable/README.md#table-extraction-settings",
        "properties": {
          "vertical_strategy": {
            "enum": [
              "lines",
              "lines_strict",
              "text",
              "explicit"
            ],
            "title": "Vertical Strategy",
            "type": "string"
          },
          "horizontal_strategy": {
            "enum": [
              "lines",
              "lines_strict",
              "text",
              "explicit"
            ],
            "title": "Horizontal Strategy",
            "type": "string"
          },
          "explicit_vertical_lines": {
            "items": {
              "type": "number"
            },
            "title": "Explicit Vertical Lines",
            "type": "array"
          },
          "explicit_horizontal_lines": {
            "items": {
              "type": "number"
            },
            "title": "Explicit Horizontal Lines",
            "type": "array"
          },
          "snap_x_tolerance": {
            "title": "Snap X Tolerance",
            "type": "number"
          },
          "snap_y_tolerance": {
            "title": "Snap Y Tolerance",
            "type": "number"
          },
          "join_x_tolerance": {
            "title": "Join X Tolerance",
            "type": "number"
          },
          "join_y_tolerance": {
            "title": "Join Y Tolerance",
            "type": "number"
          },
          "min_words_vertical": {
            "title": "Min Words Vertical",
            "type": "integer"
          },
          "min_words_horizontal": {
            "title": "Min Words Horizontal",
            "type": "integer"
          },
          "text_x_tolerance": {
            "title": "Text X Tolerance",
            "type": "number"
          },
          "text_y_tolerance": {
            "title": "Text Y Tolerance",
            "type": "number"
          },
          "intersection_x_tolerance": {
            "title": "Intersection X Tolerance",
            "type": "number"
          },
          "intersection_y_tolerance": {
            "title": "Intersection Y Tolerance",
            "type": "number"
          }
        },
        "title": "TableSettingsDict",
        "type": "object"
      },
      "TabulaDataSourceDescription": {
        "description": "Description of getting data using Tabula.",
        "properties": {
          "type": {
            "const": "tabula-table",
            "title": "Type",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "page_table_number": {
            "default": 1,
            "description": "The sequential number of the table on the page.",
            "title": "Page Table Number",
            "type": "integer"
          },
          "extraction_method": {
            "anyOf": [
              {
                "enum": [
                  "lattice",
                  "stream"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Extraction Method"
          },
          "area": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Area of page to look for table in.",
            "title": "Area"
          }
        },
        "required": [
          "type",
          "page"
        ],
        "title": "TabulaDataSourceDescription",
        "type": "object"
      },
      "TravObjectType": {
        "description": "Type of traveller object.",
        "enum": [
          "character",
          "characteristic",
          "item",
          "skill"
        ],
        "title": "TravObjectType",
        "type": "string"
      }
    },
    "description": "Glossary of traveller-book-parser functional models.\n\nThis is not a model itself but simply a collection of traveller-book-parser functional models.",
    "properties": {
      "book_description": {
        "$ref": "#/$defs/BookDescription"
      },
      "collection_description": {
        "$ref": "#/$defs/CollectionDescription"
      },
      "data_source_description": {
        "$ref": "#/$defs/DataSourceDescriptionRoot"
      }
    },
    "required": [
      "book_description",
      "collection_description",
      "data_source_description"
    ],
    "title": "TravBookParserGlossary",
    "type": "object"
  }
  '''
# ---

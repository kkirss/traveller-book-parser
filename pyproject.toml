[project]
name = "traveller-book-parser"
requires-python = "~=3.11"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "traveller-book-parser"
version = "0.1.0"
description = "Parse Traveller books into other formats."
authors = [
    "kkirss <kristofer.kirss@hotmail.com>",
]
readme = "README.md"
homepage = "https://github.com/kkirss/traveller-book-parser"
repository = "https://github.com/kkirss/traveller-book-parser"
keywords = ["traveller", "traveller-rpg", "tabula", "pydantic", "pdf"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Framework :: Pydantic :: 2",
    "Framework :: Pytest",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Topic :: Games/Entertainment :: Role-Playing",
    "Topic :: Software Development :: Version Control :: Git",
]
packages = [{include = "traveller_book_parser"}]

[tool.poetry.scripts]
traveller-book-parser = "traveller_book_parser.cli:run_cli"

[tool.poetry.dependencies]
python = "~3.11"
pandas = "2.2.2"
pdfplumber = "0.11.0"
plum-dispatch = "2.2.1"
pydantic = "2.7.1"
pydantic-settings = "2.2.1"
tabula-py = { version = "2.9.3", extras = ["jpype"] }
typer = "0.12.3"
rich = "13.7.1"

[tool.poetry.dev-dependencies]
ruff = "0.4.4"
black = {extras = ["d"], version = "24.4.2"}
ipywidgets = "8.1.2"
jupyterlab = "4.2.0"
pyright = "1.1.363"
pytest = "8.2.1"


[tool.black]
line-length = 88
target-version = ["py311"]

[tool.pyright]
include = ["traveller_book_parser"]
reportUnnecessaryTypeIgnoreComment = true
reportIncompatibleVariableOverride = false

[tool.pytest.ini_options]
addopts = "--doctest-modules"

[tool.ruff.lint]
select = [
    "ALL"
]
ignore = [
    "COM",  # Trailing commas
    "ANN101", # https://beta.ruff.rs/docs/rules/missing-type-self/
    "A003", # (class attribute) https://beta.ruff.rs/docs/rules/builtin-attribute-shadowing/
    "S101",  # Use of assert detected
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "E501",  # https://beta.ruff.rs/docs/rules/line-too-long/
    "ERA001",  # Commented-out code
    "FIX",  # Comments with "TO DO" etc.
    "TD002",  # Missing author in TO DO
    "TD003",  # Missing issue link in TO DO
    # TODO: Check and possibly enable following:
    "TRY",
    "EM",
    "RET",
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D1"]

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.lint.isort]
force-sort-within-sections = true
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = [
    "pydantic.model_validator"
]
